name: WebPush sender

on:
  repository_dispatch:
    types: [webpush_notify]

jobs:
  send:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm i web-push@3
      - name: Send pushes
        env:
          VAPID_PUBLIC:  ${{ secrets.VAPID_PUBLIC }}
          VAPID_PRIVATE: ${{ secrets.VAPID_PRIVATE }}
          VAPID_SUBJECT: ${{ secrets.VAPID_SUBJECT }}   # 例: mailto:you@example.com
          GAS_PRUNE_URL: ${{ secrets.GAS_PRUNE_URL }}   # https://script.google.com/.../exec?action=prune
          PRUNE_TOKEN:   ${{ secrets.PRUNE_TOKEN }}     # GAS Script Properties と一致
        run: |
          node - <<'NODE'
          const webpush = require('web-push');

          const ev = process.env.GITHUB_EVENT_PATH ? require(process.env.GITHUB_EVENT_PATH) : {};
          const payload = ev.client_payload || {};
          const subs = payload.subs || [];
          const title = payload.title || '通知';
          const body  = payload.body  || '';
          const url   = payload.url   || '/';
          const tag   = payload.tag   || 'sched';

          webpush.setVapidDetails(process.env.VAPID_SUBJECT, process.env.VAPID_PUBLIC, process.env.VAPID_PRIVATE);

          const prune = async (endpoint) => {
            try {
              await fetch(process.env.GAS_PRUNE_URL, {
                method:'POST',
                headers:{'Content-Type':'application/json'},
                body: JSON.stringify({ endpoint, token: process.env.PRUNE_TOKEN })
              });
            } catch(e){}
          };

          (async () => {
            for (const s of subs) {
              try {
                await webpush.sendNotification(s, JSON.stringify({ title, body, url, tag }));
              } catch (e) {
                // 410/404 は購読失効。GASに削除を依頼。
                if (e.statusCode === 410 || e.statusCode === 404) await prune(s.endpoint);
                else console.error('push error', e.statusCode, e.body || e.message);
              }
            }
          })();
          NODE
